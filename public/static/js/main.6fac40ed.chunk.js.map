{"version":3,"sources":["components/Signup.js","components/Login.js","components/PageNavLinks.js","components/Home.js","components/PetSitRequestForm.js","components/ConvoRequestForm.js","components/PetSitterCard.js","components/PetSittersPage.js","components/UpdatePetSitter.js","components/PetSitterProfile.js","components/UpdatePetSitRequest.js","components/PendingAppointmentCard.js","components/ActiveAppointmentCard.js","components/PendingPetSits.js","components/PetSitterPage.js","components/UpdateClient.js","components/ClientProfile.js","components/ClientPreviousSitters.js","components/ClientPendingAppointments.js","components/ClientPage.js","components/ConversationCard.js","components/Message.js","components/NewMessageForm.js","components/Messages.js","components/ConversationPetSitterCard.js","components/ConversationClientCard.js","components/Conversations.js","App.js","reportWebVitals.js","index.js"],"names":["formStyles","formContainer","marginTop","backgroundColor","padding","borderRadius","boxShadow","formGroup","marginBottom","label","display","fontSize","color","input","width","border","button","fontWeight","cursor","errorList","textAlign","paddingLeft","Signup","onLogin","useState","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","errors","setErrors","style","className","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","password_confirmation","then","response","ok","json","user","errorData","htmlFor","type","id","autoComplete","value","onChange","target","length","map","error","Login","PageNavLinks","to","welcomeMessageStyles","fontFamily","maxWidth","margin","paddingBottom","paddingRight","headingStyles","paragraphStyles","lineHeight","Home","select","PetSitRequestForm","newRequestFromClientPage","petSitter","updateDisplayForm","appointment_information","setAppointmentInformation","start_date","setStartDate","end_date","setEndDate","boarding","setBoarding","in_house","setInHouse","setErrorData","client","appointment","petsitter_id","client_id","apt","window","alert","console","log","ConvoRequestForm","convoTitle","setConvoTitle","navigate","useNavigate","conversation_title","resp","convo","newMessageBodyOne","user_id","conversation_id","newMessageBodyTwo","full_name","placeholder","styles","petSitterCard","imageWrapper","height","overflow","image","objectFit","heading","subheading","info","PetSitterCard","displayForm","setDisplayForm","buttonText","setButtonText","bottomElement","useRef","src","photo","alt","city","bio","my_ideal_pet_sit","day_rate","onClick","current","scrollIntoView","behavior","scrollToBottom","ref","headerStyle","PetSittersPage","petSitters","setPetSitters","useEffect","newSitters","filter","sitter","currently_available","UpdatePetSitter","updatePetSitter","changeFormView","setBio","setCity","setPhoto","setDayRate","setFullName","setMyIdealPetSit","newSitter","petSitterProfile","PetSitterProfile","updateButton","setUpdateButton","petSitterAvailable","setPetSitterAvailable","updateButtonText","setUpdateButtonText","handleUpdateAvailability","newAvailability","newPetSitter","UpdatePetSitRequest","deleteAppointmentRequest","updatePendingAppointments","updateRequestButton","setUpdateRequestButton","handleButtonToggle","newApt","updatedClient","cancelButton","acceptButton","marginLeft","PendingAppointmentCard","totalPriceCalculator","startDate","endDate","start","Date","differenceMs","Math","floor","petsitter","activeAppointmentDiv","ActiveAppointmentCard","updateActiveAppointments","handleCancel","isPetsitter","pet_information","paddingTop","PendingPetSits","appointments","setAppointments","pendingAppointments","setPendingAppointments","activeAppointments","setActiveAppointments","updatedAppointment","newPendingAppointments","declined","newApts","accepted","newActiveApts","newActiveAppointments","apts","pendingApts","canceled","activeApts","completed","PetSitterPage","updateUser","setPetSitter","newPetsitter","UpdateClient","updateClient","setPetInformation","setPetPhoto","ideal_petsitter","setIdealPetSitter","newClient","clientProfile","ClientProfile","ClientPreviousSitters","previousSitters","setPreviousSitters","petsitters","noRepeatSitters","Map","p","values","ClientPendingAppointments","deletedRequestId","newPendingRequests","ClientPage","setClient","conversationCardStyles","conversationCard","alignItems","userContainer","flexDirection","flex","userPhoto","userName","chatStartedText","openConversationButton","conversationTitle","ConversationCard","conversation","updateConvoButton","created_at","date","year","getUTCFullYear","month","String","getUTCMonth","padStart","day","getUTCDate","messageStyle","headingStyle","metaInfoStyle","messageBodyStyle","Message","message","timestamp","dateObj","getFullYear","getMonth","getDate","hours","getHours","minutes","getMinutes","time","parseTimestamp","NewMessageForm","updateMessages","currentConvoId","messageInformation","setMessageInformation","data","Messages","messages","ConversationPetSitterCard","ConversationClientCard","removeConversation","updateConversations","confirm","Conversations","conversations","setConversations","openConvoButton","setOpenConvoButton","setCurrentConvoId","setMessages","newId","oldConvo","newConversations","updatedConvo","filteredConversations","newMessageBody","newMessage","newMessages","convos","filteredConvos","convoMessages","App","setUser","handleLogout","path","element","petsitterAccount","newUser","clientAccount","position","bottom","right","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fac40ed.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\n\nconst formStyles = {\n  formContainer: {\n    marginTop: '20px',\n    backgroundColor: '#f8f8f8',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  formGroup: {\n    marginBottom: '15px'\n  },\n  label: {\n    display: 'block',\n    fontSize: '16px',\n    color: '#333',\n    marginBottom: '5px'\n  },\n  input: {\n    width: '100%',\n    padding: '8px',\n    fontSize: '16px',\n    borderRadius: '4px',\n    border: '1px solid #ccc'\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    color: '#fff',\n    backgroundColor: '#007bff',\n    borderRadius: '4px',\n    border: 'none',\n    cursor: 'pointer'\n  },\n  errorList: {\n    color: 'red',\n    marginTop: '10px',\n    textAlign: 'left',\n    paddingLeft: '20px'\n  },\n};\n\nexport default function Signup({ onLogin }) {\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\")\n  const [errors, setErrors] = useState([])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((user) => onLogin(user));\n        } else {\n          response.json().then((errorData) => setErrors(errorData.errors))\n        }\n      })\n  }\n  \n  return (\n    <div style={formStyles.formContainer}>\n      <form className=\"styled-form\" onSubmit={handleSubmit}>\n        <h2>Signup Here</h2>\n        <div style={formStyles.formGroup}>\n          <label htmlFor=\"signupUsername\" style={formStyles.label}>Username:</label>\n          <input type=\"text\" id=\"signupUsername\" autoComplete=\"on\" value={username} onChange={(e) => setUsername(e.target.value)} style={formStyles.input} />\n        </div>\n        <div style={formStyles.formGroup}>\n          <label htmlFor=\"signupPassword\" style={formStyles.label}>Password:</label>\n          <input type=\"password\" id=\"signupPassword\" autoComplete=\"on\" value={password} onChange={(e) => setPassword(e.target.value)} style={formStyles.input} />\n        </div>\n        <div style={formStyles.formGroup}>\n          <label htmlFor=\"password_confirmation\" style={formStyles.label}>Confirm Password:</label>\n          <input type=\"password\" id=\"password_confirmation\" autoComplete=\"on\" value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)} style={formStyles.input} />\n        </div>\n        <button type=\"submit\" style={formStyles.button}>Submit</button>\n      </form>\n      {errors.length > 0 && (\n        <ul style={formStyles.errorList}>\n          {errors.map((error) => (\n            <li key={error}>{error}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport '../App.css';\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    }\n};\n\nexport default function Login({ onLogin }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(\"/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username,\n                password\n            }),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((user) => onLogin(user));\n                } else {\n                    response.json().then((errorData) => setErrors([errorData.error]))\n                }\n            })\n    }\n\n    return (\n        <div style={formStyles.formContainer}>\n            <form className=\"styled-form\" onSubmit={handleSubmit}>\n                <h2>User Login</h2>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"username\" style={formStyles.label}>Username:</label>\n                    <input autoComplete=\"on\" type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} style={formStyles.input} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"password\" style={formStyles.label}>Password:</label>\n                    <input type=\"password\" id=\"password\" autoComplete=\"on\" value={password} onChange={(e) => setPassword(e.target.value)} style={formStyles.input} />\n                </div>\n                <button type=\"submit\" style={formStyles.button}>Submit</button>\n            </form>\n            {errors.length > 0 && (\n                <ul style={formStyles.errorList}>\n                    {errors.map((error) => (\n                        <li key={error}>{error}</li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport '../App.css';\n\nexport default function PageNavLinks() {\n\n    return (\n        <div className=\"navigation\">\n            <NavLink to=\"/\" className=\"navButtons\">Home</NavLink>\n            <NavLink to=\"/petsitter\" className=\"navButtons\">Petsitter Account</NavLink>\n            <NavLink to=\"/client\" className=\"navButtons\">Client Account</NavLink>\n            <NavLink to=\"/petsitters\" className=\"navButtons\">View Pet Sitters</NavLink>\n            <NavLink to=\"/conversations\" className=\"navButtons\">Messages</NavLink>\n        </div>\n    )\n}","import React from 'react';\n\nconst welcomeMessageStyles = {\n    fontFamily: 'Helvetica, sans-serif',\n    maxWidth: '600px',\n    margin: '0 auto',\n    paddingBottom: '40px',\n    paddingLeft: '40px',\n    paddingRight: '40px',\n    backgroundColor: '#f2f2f2',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    textAlign: 'center',\n};\n\nconst headingStyles = {\n    fontSize: '28px',\n    marginBottom: '20px',\n    color: '#333',\n};\n\nconst paragraphStyles = {\n    fontSize: '16px',\n    lineHeight: '1.6',\n    color: '#666',\n    marginBottom: '16px',\n};\n\nexport default function Home({ user }) {\n\n    return (\n        <div style={welcomeMessageStyles}>\n            <h1 style={headingStyles}>Welcome, {user.username}!</h1>\n            <p style={paragraphStyles}>We're thrilled to have you here and embark on a journey of connecting pet sitters to loving clients in the heart of New York City. Whether you're a seasoned pet sitter or a caring pet owner, NYCPetSitters is the perfect platform for you.</p>\n            <p style={paragraphStyles}>Our mission is to connect independent animal caretakers with clients in need of support. Our pet sitters range from locals who do this professionaly, to out-of-towners who like to trade their pet sitting services for a stay in the big apple!</p>\n            <p style={paragraphStyles}>Explore our community of experienced pet sitters who are eager to shower your pets with love and attention. For pet sitters, this is an excellent opportunity to connect with caring clients who share the same passion for animals.</p>\n            <p style={paragraphStyles}>Wagging tails and happy purrs await you! Visit the \"Petsitter Page\" to set up your petsitter account, or visit the \"Client Page\" to set up your client account. All active petsitters can be viewed on the \"View Pet Sitters\" page. If registered as a client, a Pet Sit Request form will be available for each pet sitter.</p>\n        </div>\n    )\n}","import React, { useState } from \"react\";\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    select: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        backgroundColor: '#fff'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n    errorList: {\n        color: 'red',\n        marginTop: '10px',\n        textAlign: 'left',\n        paddingLeft: '20px'\n    },\n};\n\nexport default function PetSitRequestForm({ newRequestFromClientPage, petSitter, user, updateDisplayForm }) {\n\n\n    const [appointment_information, setAppointmentInformation] = useState(\"\")\n    const [start_date, setStartDate] = useState(\"\")\n    const [end_date, setEndDate] = useState(\"\")\n    const [boarding, setBoarding] = useState(true)\n    const [in_house, setInHouse] = useState(true)\n    const [errors, setErrorData] = useState([])\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        fetch(\"/appointments\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                appointment: {\n                    appointment_information: appointment_information,\n                    start_date: start_date,\n                    end_date: end_date,\n                    boarding: boarding,\n                    in_house: in_house,\n                    petsitter_id: petSitter.id,\n                    client_id: user.client.id\n                },\n            }),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((apt) => {\n                        window.alert(\"Appointment was requested!\")\n                        setAppointmentInformation(\"\")\n                        setBoarding(true)\n                        setInHouse(true)\n                        setStartDate(\"\")\n                        setEndDate(\"\")\n                        setErrorData([])\n                        updateDisplayForm()\n                        console.log(apt)\n                        if (newRequestFromClientPage) {\n                            newRequestFromClientPage(apt)\n                        }\n                    });\n                } else {\n                    response.json().then((errorData) => {\n                        console.log(errorData)\n                        setErrorData(errorData.errors)\n                    })\n                }\n            });\n    }\n\n    function handleBoardingSelect(e) {\n        if (e.target === \"Yes\") {\n            setBoarding(true)\n        } else {\n            setBoarding(false)\n        }\n    }\n\n    function handleHouseSitSelect(e) {\n        if (e.target === \"Yes\") {\n            setInHouse(true)\n        } else {\n            setInHouse(false)\n        }\n    }\n\n    if (user.client) {\n        return (\n            <div style={formStyles.formContainer}>\n                <h2>Pet Sit Request Form:</h2>\n                <form className=\"custom-form\" onSubmit={handleSubmit}>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"appointment_information\" style={formStyles.label}>Appointment Information:</label>\n                        <textarea type=\"text\" className=\"custom-input\" value={appointment_information} onChange={(e) => setAppointmentInformation(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"start_date\" style={formStyles.label}>Start Date:</label>\n                        <input type=\"date\" className=\"custom-input\" value={start_date} onChange={(e) => setStartDate(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"end_date\" style={formStyles.label}>End Date:</label>\n                        <input type=\"date\" className=\"custom-input\" value={end_date} onChange={(e) => setEndDate(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"housesit\" style={formStyles.label}>Interested in house sitting:</label>\n                        <select onChange={handleHouseSitSelect} className=\"custom-select\" style={formStyles.select} >\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"boarding\" style={formStyles.label}>Interested in boarding:</label>\n                        <select onChange={handleBoardingSelect} className=\"custom-select\" style={formStyles.select} >\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                    </div>\n                    <button style={formStyles.button}>Request a pet-sit</button>\n                </form>\n                {errors.length > 0 && (\n                    <ul style={formStyles.errorList}>\n                        {errors.map((error) => (\n                            <li key={error}>{error}</li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        );\n    } else {\n        return (<div id=\"emptyAppointmentFormDiv\">\n            <h4>You must be signed up as a client to request an appointment with this pet sitter!</h4>\n        </div>)\n    }\n}","import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    select: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        backgroundColor: '#fff'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n    errorList: {\n        color: 'red',\n        marginTop: '10px',\n        textAlign: 'left',\n        paddingLeft: '20px'\n    }\n};\n\nexport default function ConvoRequestForm({ user, petSitter }) {\n\n    const [convoTitle, setConvoTitle] = useState(\"\")\n    const navigate = useNavigate()\n\n    function startConversation(e) {\n        e.preventDefault()\n\n        if (user.client !== null) {\n            fetch(\"/conversations\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    client_id: user.client.id,\n                    petsitter_id: petSitter.id,\n                    conversation_title: convoTitle\n                }),\n            })\n                .then((resp) => resp.json())\n                .then((convo) => {\n\n                    let newMessageBodyOne = `Automated message: ${user.username} just started a conversation.`\n\n                    fetch(\"/messages\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id,\n                            conversation_id: convo.id,\n                            body: newMessageBodyOne\n                        })\n                    })\n                        .then((resp) => resp.json())\n                        .then(() => {\n\n                            let newMessageBodyTwo = `Automated message: ${user.username} just added petsitter ${petSitter.full_name} to a conversation.`\n\n                            fetch(\"/messages\", {\n                                method: \"POST\",\n                                headers: {\n                                    \"Content-Type\": \"application/json\"\n                                },\n                                body: JSON.stringify({\n                                    user_id: petSitter.user_id,\n                                    conversation_id: convo.id,\n                                    body: newMessageBodyTwo\n                                })\n                            })\n                                .then((resp) => resp.json())\n                                .then(() => navigate('/conversations')\n                                )\n                        })\n                })\n        }\n    }\n\n\n    return (\n        <div style={formStyles.formContainer}>\n            <h2>Start a conversation:</h2>\n            <form className=\"custom-form\" onSubmit={startConversation}>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"housesit\" style={formStyles.label}>\n                        Conversation Title:\n                    </label>\n                    <input onChange={(e) => setConvoTitle(e.target.value)} className=\"conversationTitle\" style={formStyles.input} placeholder=\"example: June pet-sit\" />\n                </div>\n                <button style={formStyles.button}>Start a conversation</button>\n            </form>\n            {/* {errors.length > 0 && (\n                    <ul style={formStyles.errorList}>\n                        {errors.map((error) => (\n                            <li key={error}>{error}</li>\n                        ))}\n                    </ul>\n                )} */}\n        </div>\n    );\n}","import React, { useState, useRef } from \"react\";\nimport '../App.css';\nimport PetSitRequestForm from \"./PetSitRequestForm\";\nimport ConvoRequestForm from \"./ConvoRequestForm\";\n\nconst styles = {\n  petSitterCard: {\n    backgroundColor: '#f8f8f8',\n    padding: '20px',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    maxWidth: '400px',\n    margin: '10px auto',\n    textAlign: 'center'\n  },\n  imageWrapper: {\n    width: '150px',\n    height: '150px',\n    margin: '0 auto 20px',\n    borderRadius: '50%',\n    overflow: 'hidden',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    borderRadius: '50%'\n  },\n  heading: {\n    fontSize: '24px',\n    margin: '0',\n    color: '#333'\n  },\n  subheading: {\n    fontSize: '18px',\n    margin: '10px 0',\n    color: '#666'\n  },\n  info: {\n    fontSize: '16px',\n    color: '#666',\n    margin: '10px 0'\n  },\n};\n\nexport default function PetSitterCard({ newRequestFromClientPage, petSitter, user }) {\n\n  const [displayForm, setDisplayForm] = useState(false)\n  const [buttonText, setButtonText] = useState(\"Contact / Request Pet Sit\")\n\n  const bottomElement = useRef(null);\n\n  function scrollToBottom() {\n      bottomElement?.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  function updateDisplayForm() {\n    if (displayForm === false) {\n      setDisplayForm(true)\n      setButtonText(\"Close forms\")\n      scrollToBottom()\n    } else {\n      setDisplayForm(false)\n      setButtonText(\"Contact / Request Pet Sit\")\n    }\n  }\n\n  function updateDisplayFormAfterSubmit() {\n    setDisplayForm(false)\n  }\n\n  return (\n    <div className=\"petSitterCardDiv\" style={styles.petSitterCard}>\n      <div style={styles.imageWrapper}>\n        <img src={petSitter.photo} alt=\"the petsitter\" style={styles.image} />\n      </div>\n      <h3 style={styles.heading}>{petSitter.full_name}</h3>\n      <h4 style={styles.subheading}>Location:</h4>\n      <p style={styles.info}>I am based in {petSitter.city}</p>\n      <h4 style={styles.subheading}>About me:</h4>\n      <p style={styles.info}>{petSitter.bio}</p>\n      <h4 style={styles.subheading}>My ideal pet sit:</h4>\n      <p style={styles.info}>{petSitter.my_ideal_pet_sit}</p>\n      <h4 style={styles.subheading}>What do I charge?</h4>\n      <p style={styles.info}>My rate is currently ${petSitter.day_rate}</p>\n      {user.client && (\n        <div>\n          <button onClick={updateDisplayForm} value={buttonText}>{buttonText}</button>\n          {displayForm === true &&\n            <div>\n              <ConvoRequestForm user={user} petSitter={petSitter} />\n              <PetSitRequestForm newRequestFromClientPage={newRequestFromClientPage} updateDisplayForm={updateDisplayFormAfterSubmit} user={user} petSitter={petSitter} />\n            </div>\n          }\n        </div>\n      )}\n      <div ref={bottomElement}>\n      </div>\n    </div>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport PetSitterCard from \"./PetSitterCard\";\n\nconst headerStyle = {\n    textAlign: 'center',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    color: '#9e9e9e',\n    width: '100%',\n    fontSize: '36px',\n    lineHeight: '1.2'\n};\n\nexport default function PetSittersPage({ user }) {\n\n    const [petSitters, setPetSitters] = useState(null)\n\n    useEffect(() => {\n        fetch(\"/petsitters\")\n            .then((response) => response.json())\n            .then((petSitters) => {\n                let newSitters = petSitters.filter((sitter) => sitter.user_id !== user.id && sitter.currently_available === true)\n                setPetSitters(newSitters)\n            })\n    }, [user.id])\n\n    if (petSitters) {\n        return (\n            <div id=\"petSittersPageDiv\">\n                {user.client === null && (\n                    <h3 style={{textAlign: \"center\"}}>Sign up as a client to interact with other pet sitters.</h3>\n                )}\n                {petSitters.map((petSitter) => (\n                    <PetSitterCard user={user} key={petSitter.id} petSitter={petSitter} />\n                ))}\n            </div>\n        )\n    } else {\n        return <h1 style={headerStyle}>... No pet sitters loaded yet ...</h1>\n    }\n}","import React from \"react\";\nimport { useState } from \"react\";\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n};\n\nexport default function UpdatePetSitter({ updatePetSitter, petSitter, changeFormView }) {\n\n    const [bio, setBio] = useState(petSitter.bio)\n    const [city, setCity] = useState(petSitter.city)\n    const [photo, setPhoto] = useState(petSitter.photo)\n    const [day_rate, setDayRate] = useState(petSitter.day_rate)\n    const [full_name, setFullName] = useState(petSitter.full_name)\n    const [my_ideal_pet_sit, setMyIdealPetSit] = useState(petSitter.my_ideal_pet_sit)\n    // const [errors, setErrors] = useState([])\n\n    function patchProfile(e) {\n        e.preventDefault()\n        fetch(`/petsitters/${petSitter.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                bio,\n                city,\n                photo,\n                day_rate,\n                full_name,\n                my_ideal_pet_sit\n            })\n        })\n            .then((resp) => resp.json())\n            .then((newSitter) => {\n                changeFormView()\n                updatePetSitter(newSitter)\n            })\n    }\n\n    return (\n        <div style={formStyles.formContainer}>\n            <form className=\"styled-form\" onSubmit={patchProfile}>\n                <h2>Update Pet Sitter account</h2>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"name\" style={formStyles.label}>Your Full Name:</label>\n                    <input type=\"text\" id=\"bio\" value={full_name} onChange={(e) => setFullName(e.target.value)} style={formStyles.input} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"name\" style={formStyles.label}>Bio:</label>\n                    <textarea type=\"text\" id=\"bio\" value={bio} onChange={(e) => setBio(e.target.value)} style={formStyles.input} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"name\" style={formStyles.label}>My Ideal Pet Sit:</label>\n                    <textarea type=\"text\" id=\"bio\" value={my_ideal_pet_sit} onChange={(e) => setMyIdealPetSit(e.target.value)} style={formStyles.input} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"city\" style={formStyles.label}>City:</label>\n                    <input type=\"text\" id=\"city\" value={city} onChange={(e) => setCity(e.target.value)} style={formStyles.input} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"photo\" style={formStyles.label}>Photo Url:</label>\n                    <input type=\"text\" id=\"photo\" value={photo} onChange={(e) => setPhoto(e.target.value)} style={formStyles.input} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"dayRate\" style={formStyles.label}>Day Rate:</label>\n                    <input type=\"text\" id=\"dayRate\" value={day_rate} onChange={(e) => setDayRate(e.target.value)} style={formStyles.input} />\n                </div>\n                <button type=\"submit\">Update Account</button>\n            </form>\n            {/* {errors.length > 0 && (\n                <ul style={formStyles.errorList}>\n                    {errors.map((error) => (\n                        <li key={error}>{error}</li>\n                    ))}\n                </ul>\n            )} */}\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport UpdatePetSitter from \"./UpdatePetSitter\";\n\nconst styles = {\n    petSitterProfile: {\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        maxWidth: '400px',\n        margin: '0 auto',\n        textAlign: 'center'\n    },\n    imageWrapper: {\n        width: '150px',\n        height: '150px',\n        margin: '0 auto 20px',\n        borderRadius: '50%',\n        overflow: 'hidden',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    heading: {\n        fontSize: '24px',\n        margin: '0',\n        color: '#333'\n    },\n    info: {\n        fontSize: '16px',\n        color: '#666',\n        margin: '10px 0'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n};\n\nexport default function PetSitterProfile({ petSitter, updatePetSitter }) {\n    const [updateButton, setUpdateButton] = useState(false)\n    const [petSitterAvailable, setPetSitterAvailable] = useState(petSitter.currently_available)\n    const [updateButtonText, setUpdateButtonText] = useState(\"Update Account\")\n\n    function changeFormView() {\n        setUpdateButton(!updateButton)\n\n        if (updateButtonText === \"Update Account\") {\n            setUpdateButtonText(\"Close Update Form\")\n        } else {\n            setUpdateButtonText(\"Update Account\")\n        }\n    }\n\n    function handleUpdateAvailability(e) {\n        let newAvailability = !petSitterAvailable\n        fetch(`/petsitters/${petSitter.id}/availability`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                currently_available: newAvailability\n            })\n        })\n            .then((resp) => resp.json())\n            .then((newPetSitter) => {\n                setPetSitterAvailable(newAvailability)\n                console.log(newPetSitter)\n                updatePetSitter(newPetSitter)\n            })\n    }\n\n    return (\n        <div id=\"petSitterProfile\" style={styles.petSitterProfile}>\n            <div style={styles.imageWrapper}>\n                <img src={petSitter.photo} alt=\"the petsitter\" style={styles.image} />\n            </div>\n            <h2 style={styles.heading}>Your pet sitting account:</h2>\n            <p style={styles.info}><b>Name:</b> Hi, I am {petSitter.full_name}.</p>\n            <p style={styles.info}><b>City:</b> I am located in {petSitter.city}</p>\n            <p style={styles.info}><b>Day Rate:</b> ${petSitter.day_rate} a day.</p>\n            <p style={styles.info}><b>Bio:</b> {petSitter.bio}</p>\n            <p style={styles.info}><b>My Ideal Pet Sit:</b> {petSitter.my_ideal_pet_sit}</p>\n            <button onClick={() => changeFormView()}>{updateButtonText}</button>\n            {updateButton === true && (\n                <div>\n                    <UpdatePetSitter changeFormView={changeFormView} updatePetSitter={updatePetSitter} petSitter={petSitter} />\n                </div>\n            )}\n            {petSitterAvailable === true && (\n                <div>\n                    <h3>You are currently listed as available on the pet sitters page! Update below to change availability.</h3>\n                    <button onClick={handleUpdateAvailability}>Become unavailable</button>\n                </div>\n            )}\n            {petSitterAvailable === false && (\n                <div>\n                    <h3>You are currently unavailable and not listed on the petsitters page. Update below to change availability.</h3>\n                    <button onClick={handleUpdateAvailability}>Become available</button>\n                </div>\n            )}\n        </div>\n    );\n}","import React from \"react\";\nimport { useState } from \"react\";\n\nconst formStyles = {\n    formContainer: {\n        backgroundColor: '#FFF3D0',\n        padding: '20px',\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n    errorList: {\n        color: 'red',\n        marginTop: '10px',\n        textAlign: 'left',\n        paddingLeft: '20px'\n    },\n};\n\nexport default function UpdatePetSitRequest({ deleteAppointmentRequest, appointment, updatePendingAppointments }) {\n\n    const [appointment_information, setAppointmentInformation] = useState(appointment.appointment_information)\n    const [start_date, setStartDate] = useState(appointment.start_date)\n    const [end_date, setEndDate] = useState(appointment.end_date)\n    const [errors, setErrors] = useState([])\n\n\n    const [updateRequestButton, setUpdateRequestButton] = useState(false)\n    const [buttonText, setButtonText] = useState(\"Update Request\")\n\n    function handleButtonToggle() {\n        if (updateRequestButton === true) {\n            setUpdateRequestButton(false)\n            setButtonText(\"Update Request\")\n        } else {\n            setUpdateRequestButton(true)\n            setButtonText(\"Close Update Form\")\n        }\n    }\n\n    function patchProfile(e) {\n        e.preventDefault()\n        fetch(`/appointments/${appointment.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                appointment_information,\n                start_date,\n                end_date\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((newApt) => {\n                        handleButtonToggle()\n                        console.log(newApt)\n                        updatePendingAppointments(newApt)\n                        setAppointmentInformation(newApt.appointment_information)\n                        setStartDate(newApt.start_date)\n                        setEndDate(newApt.end_date)\n                    })\n                } else {\n                    response.json().then((errorData) => {\n                        console.log(errorData)\n                        setErrors(errorData.errors)\n                    })\n                }\n            })\n    }\n\n    function handleDelete() {\n        fetch(`/appointments/${appointment.id}`, { method: 'DELETE'})\n            .then((resp) => resp.json())\n            .then((updatedClient) => deleteAppointmentRequest(appointment.id, updatedClient))\n    }\n\n    return (\n        <div style={formStyles.formContainer}>\n            <button value={buttonText} className=\"acceptButton\" onClick={handleButtonToggle}>{buttonText}</button>\n            {updateRequestButton === true &&\n                <div style={formStyles.formContainer}>\n                    <form className=\"styled-form\" onSubmit={patchProfile}>\n                        <h2>Pet Sit Request Form</h2>\n                        <div style={formStyles.formGroup}>\n                            <label style={formStyles.label} htmlFor=\"appointment_information\">\n                                Appointment Information:\n                            </label>\n                            <textarea style={formStyles.input} type=\"text\" id=\"appointment_information\" value={appointment_information} onChange={(e) => setAppointmentInformation(e.target.value)} />\n                        </div>\n                        <div style={formStyles.formGroup}>\n                            <label style={formStyles.label} htmlFor=\"start_date\">\n                                Start Date:\n                            </label>\n                            <input style={formStyles.input} type=\"date\" id=\"start_date\" value={start_date} onChange={(e) => setStartDate(e.target.value)} />\n                        </div>\n                        <div style={formStyles.formGroup}>\n                            <label style={formStyles.label} htmlFor=\"end_date\">\n                                End Date:\n                            </label>\n                            <input style={formStyles.input} type=\"date\" id=\"end_date\" value={end_date} onChange={(e) => setEndDate(e.target.value)} />\n                        </div>\n                        <button type=\"submit\">Update Request</button>\n                    </form>\n                    {errors.length > 0 && (\n                        <ul style={formStyles.errorList}>\n                            {errors.map((error) => (\n                                <li key={error}>{error}</li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            }\n            <br /><br />\n            <button onClick={handleDelete} className=\"declineButton\" value=\"Cancelled\">Cancel Pet Sit Request</button>\n        </div>\n    )\n}","import React from \"react\";\nimport UpdatePetSitRequest from \"./UpdatePetSitRequest\";\n\nconst styles = {\n  petSitterProfile: {\n    backgroundColor: '#FFF3D0',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    maxWidth: '400px',\n    margin: '0 auto',\n    textAlign: 'center'\n  },\n  imageWrapper: {\n    width: '150px',\n    height: '150px',\n    margin: '0 auto 20px',\n    borderRadius: '50%',\n    overflow: 'hidden',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    borderRadius: '50%'\n  },\n  heading: {\n    fontSize: '24px',\n    margin: '0',\n    color: '#333'\n  },\n  subheading: {\n    fontSize: '18px',\n    margin: '10px 0',\n    color: '#666'\n  },\n  cancelButton: {\n    padding: '8px 16px',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    color: '#fff',\n    backgroundColor: 'red',\n    borderRadius: '4px',\n    border: 'none',\n    cursor: 'pointer'\n  },\n  acceptButton: {\n    padding: '8px 16px',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    color: '#fff',\n    backgroundColor: 'green',\n    borderRadius: '4px',\n    border: 'none',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  },\n};\n\nexport default function PendingAppointmentCard({ deleteAppointmentRequest, appointment, updatePendingAppointments, user }) {\n\n  function totalPriceCalculator(startDate, endDate) {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const differenceMs = end - start;\n    const days = Math.floor(differenceMs / (1000 * 60 * 60 * 24));\n    const totalPrice = days * appointment.petsitter.day_rate;\n    return totalPrice;\n  }\n\n  function handleAccept() {\n    fetch(`/appointments/${appointment.id}/accepted`)\n      .then((resp) => resp.json())\n      .then((apt) => updatePendingAppointments(apt))\n  }\n\n  function handleDecline() {\n    fetch(`/appointments/${appointment.id}/declined`)\n      .then((resp) => resp.json())\n      .then((apt) => updatePendingAppointments(apt))\n  }\n\n  const isPetsitter = user.id === appointment.petsitter.user_id;\n\n  if (isPetsitter) {\n    return (\n      <div id=\"petSitterProfile\" style={styles.petSitterProfile}>\n        <div style={styles.imageWrapper}>\n          <img height=\"150\" width=\"150\" src={appointment.client.photo} style={styles.image} alt=\"the pet of the appointment\" />\n        </div>\n        <h2>Pending Request:</h2>\n        <p><b>Client Name:</b> {appointment.client.full_name}</p>\n        <p><b>Total Price:</b> ${totalPriceCalculator(appointment.start_date, appointment.end_date)}</p>\n        <p><b>Start Date:</b> {appointment.start_date}</p>\n        <p><b>End Date:</b> {appointment.end_date}</p>\n        {appointment.boarding === true &&\n          <p><b>Open to boarding at petsitters place</b></p>\n        }\n        {appointment.in_house === true &&\n          <p><b>Open to house-sitting at clients place</b></p>\n        }\n        <p><b>Appointment Information:</b> {appointment.appointment_information}</p>\n        <button onClick={handleAccept} className=\"acceptButton\" value=\"Accepted\">Accept Pet Sit</button>\n        <button onClick={handleDecline} className=\"declineButton\" value=\"Declined\">Decline Pet Sit</button>\n      </div>\n    );\n  } else {\n    return (\n      <div id=\"petSitterProfile\" style={styles.petSitterProfile}>\n        <div style={styles.imageWrapper}>\n          <img height=\"150\" width=\"150\" src={appointment.petsitter.photo} style={styles.image} alt=\"the petsitter\" />\n        </div>\n        <h2>Pending Pet Sit Request:</h2>\n        <p><b>Pet Sitter Requested:</b> {appointment.petsitter.full_name}</p>\n        <p><b>Total Price:</b> ${totalPriceCalculator(appointment.start_date, appointment.end_date)}</p>\n        <p><b>Start Date:</b> {appointment.start_date}</p>\n        <p><b>End Date:</b> {appointment.end_date}</p>\n        <p><b>Appointment Information:</b> {appointment.appointment_information}</p>\n        <UpdatePetSitRequest deleteAppointmentRequest={deleteAppointmentRequest} appointment={appointment} updatePendingAppointments={updatePendingAppointments} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst styles = {\n    activeAppointmentDiv: {\n        backgroundColor: '#C8E6C9',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        maxWidth: '400px',\n        margin: '0 auto',\n        textAlign: 'center',\n    },\n    imageWrapper: {\n        width: '150px',\n        height: '150px',\n        margin: '0 auto 20px',\n        borderRadius: '50%',\n        overflow: 'hidden',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        borderRadius: '50%',\n    },\n    heading: {\n        fontSize: '24px',\n        margin: '0',\n        color: '#333',\n    },\n    subheading: {\n        fontSize: '18px',\n        margin: '10px 0',\n        color: '#666',\n    },\n    cancelButton: {\n        padding: '8px 16px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: 'red',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer',\n    },\n};\n\nexport default function ActiveAppointmentCard({ appointment, updateActiveAppointments, user }) {\n\n    function handleCancel() {\n        fetch(`/appointments/${appointment.id}/canceled`)\n            .then((resp) => resp.json())\n            .then((apt) => {\n                console.log(apt)\n                updateActiveAppointments(apt)\n            })\n    }\n\n    function totalPriceCalculator(startDate, endDate) {\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n        const differenceMs = end - start;\n        const days = Math.floor(differenceMs / (1000 * 60 * 60 * 24));\n        const totalPrice = days * appointment.petsitter.day_rate;\n        return totalPrice;\n    }\n\n    const isPetsitter = user.id === appointment.petsitter.user_id\n\n    console.log(isPetsitter)\n    console.log(appointment)\n\n    if (isPetsitter) {\n        return (\n            <div style={styles.activeAppointmentDiv}>\n                <div style={styles.imageWrapper}>\n                    <img height=\"150\" width=\"150\" src={appointment.client.photo} style={styles.image} alt=\"Client's Pet\" />\n                </div>\n                <h2 style={styles.heading}>Accepted Appointment:</h2>\n                <p style={styles.subheading}>Client Name: {appointment.client.full_name}</p>\n                <p style={styles.subheading}>Total Price: ${totalPriceCalculator(appointment.start_date, appointment.end_date)}</p>\n                <p style={styles.subheading}>Start Date: {appointment.start_date}</p>\n                <p style={styles.subheading}>End Date: {appointment.end_date}</p>\n                <p style={styles.subheading}>Pet Information: {appointment.client.pet_information}</p>\n                <p style={styles.subheading}>Appointment Information: {appointment.appointment_information}</p>\n                <button onClick={handleCancel} className=\"declineButton\">Cancel Pet Sit</button>\n            </div>\n        );\n    } else {\n        return (\n            <div style={styles.activeAppointmentDiv}>\n                <div style={styles.imageWrapper}>\n                    <img height=\"150\" width=\"150\" src={appointment.petsitter.photo} alt=\"Petsitter\" style={styles.image} />\n                </div>\n                <h2 style={styles.heading}>Accepted Appointment:</h2>\n                <p style={styles.subheading}>Pet Sitter Name: {appointment.petsitter.full_name}</p>\n                <p style={styles.subheading}>Total Price: ${totalPriceCalculator(appointment.start_date, appointment.end_date)}</p>\n                <p style={styles.subheading}>Start Date: {appointment.start_date}</p>\n                <p style={styles.subheading}>End Date: {appointment.end_date}</p>\n                <p style={styles.subheading}>Pet Information: {appointment.client.pet_information}</p>\n                <button onClick={handleCancel} className=\"declineButton\">Cancel Pet Sit</button>\n            </div>\n        );\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport PendingAppointmentCard from \"./PendingAppointmentCard\";\nimport ActiveAppointmentCard from \"./ActiveAppointmentCard\";\nimport '../App.css';\n\nconst headerStyle = {\n    paddingTop: '20px',\n    textAlign: 'center',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    color: '#9e9e9e',\n    width: '100%',\n    fontSize: '36px',\n    lineHeight: '1.2'\n};\n\nexport default function PendingPetSits({ petSitter, user }) {\n\n    const [appointments, setAppointments] = useState([])\n    const [pendingAppointments, setPendingAppointments] = useState([])\n    const [activeAppointments, setActiveAppointments] = useState([])\n\n    useEffect(() => {\n        fetch(\"/appointments\").then((response) => {\n            if (response.ok) {\n                response.json().then((apts) => {\n                    setAppointments(apts)\n\n                    let pendingApts = apts.filter((apt) => apt.petsitter_id === petSitter.id && apt.accepted !== true && apt.declined !== true && apt.canceled !== true)\n                    setPendingAppointments(pendingApts)\n\n                    let activeApts = apts.filter((apt) => apt.petsitter_id === petSitter.id && apt.accepted === true && apt.completed !== true && apt.canceled !== true)\n                    setActiveAppointments(activeApts)\n                });\n            }\n        });\n    }, [petSitter, user]);\n\n    function updatePendingAppointments(updatedAppointment) {\n\n        let newPendingAppointments = pendingAppointments.filter((apt) => apt.declined !== true && apt.id !== updatedAppointment.id)\n        setPendingAppointments(newPendingAppointments)\n\n        let newApts = appointments.map((apt) => {\n            if (apt.id === updatedAppointment.id) {\n                return { ...apt, ...updatedAppointment }\n            } else {\n                return apt\n            }\n        })\n        setAppointments(newApts)\n\n        if (updatedAppointment.accepted === true) {\n            let newActiveApts = [...activeAppointments, updatedAppointment]\n            setActiveAppointments(newActiveApts)\n        }\n    }\n\n    function updateActiveAppointments(updatedAppointment) {\n\n        let newActiveAppointments = activeAppointments.filter((apt) => apt.id !== updatedAppointment.id)\n        setActiveAppointments(newActiveAppointments)\n\n        let newApts = appointments.map((apt) => {\n            if (apt.id === updatedAppointment.id) {\n                return { ...apt, ...updatedAppointment }\n            } else {\n                return apt\n            }\n        })\n        setAppointments(newApts)\n    }\n\n    if (pendingAppointments.length > 0 || activeAppointments.length > 0) {\n        return (\n            <div>\n                <h2 style={headerStyle}>Active Appointments / Requests:</h2>\n                {activeAppointments.map((appointment) => (\n                    <ActiveAppointmentCard user={user} petSitter={petSitter} updateActiveAppointments={updateActiveAppointments} appointment={appointment} key={appointment.id} />\n                ))}\n                {pendingAppointments.map((appointment) => (\n                    <PendingAppointmentCard user={user} petSitter={petSitter} updatePendingAppointments={updatePendingAppointments} appointment={appointment} key={appointment.id} />\n                ))}\n            </div>\n        )\n    } else {\n        return (\n            <div style={headerStyle}>No pending requests / active pet sits</div>\n        )\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport PetSitterProfile from \"./PetSitterProfile\";\nimport PendingPetSits from \"./PendingPetSits\";\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n};\n\nexport default function PetSitterPage({ user, updateUser }) {\n\n    const [bio, setBio] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [photo, setPhoto] = useState(\"\")\n    const [day_rate, setDayRate] = useState(\"\")\n    const [full_name, setFullName] = useState(\"\")\n    const [my_ideal_pet_sit, setMyIdealPetSit] = useState(\"\")\n    const [petSitter, setPetSitter] = useState(null)\n    const [errors, setErrors] = useState([])\n\n    useEffect(() => {\n        fetch(\"/petsitter\").then((response) => {\n            if (response.ok) {\n                response.json().then((petSitter) => setPetSitter(petSitter));\n            }\n        });\n    }, []);\n\n    function updatePetSitter(newPetsitter) {\n        setPetSitter(newPetsitter)\n    }\n\n    function handlePetSitterOptIn(e) {\n        e.preventDefault();\n        fetch(`/petsitters`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                bio,\n                city,\n                photo,\n                day_rate,\n                full_name,\n                my_ideal_pet_sit,\n                user_id: user.id,\n                currently_available: true\n            }),\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((petSitter) => {\n                    setPetSitter(petSitter)\n                    updateUser(petSitter)\n                });\n            } else {\n                response.json().then((errorData) => {\n                    console.log(errorData)\n                    setErrors(errorData.errors)\n                })\n            }\n        })\n    }\n\n    if (petSitter) {\n        return (\n            <div>\n                <PetSitterProfile updatePetSitter={updatePetSitter} petSitter={petSitter} />\n                <PendingPetSits petSitter={petSitter} user={user} />\n            </div>\n\n        )\n    } else {\n        return (\n            <div style={formStyles.formContainer}>\n                <form className=\"styled-form\" onSubmit={handlePetSitterOptIn}>\n                    <h2>Pet Sitter Form</h2>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"name\" style={formStyles.label}>Your Full Name:</label>\n                        <input type=\"text\" id=\"bio\" value={full_name} onChange={(e) => setFullName(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"name\" style={formStyles.label}>Bio:</label>\n                        <textarea type=\"text\" id=\"bio\" value={bio} onChange={(e) => setBio(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"name\" style={formStyles.label}>My Ideal Pet Sit:</label>\n                        <textarea type=\"text\" id=\"bio\" value={my_ideal_pet_sit} onChange={(e) => setMyIdealPetSit(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"city\" style={formStyles.label}>City:</label>\n                        <input type=\"text\" id=\"city\" value={city} onChange={(e) => setCity(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"photo\" style={formStyles.label}>Photo Url:</label>\n                        <input type=\"text\" id=\"photo\" value={photo} onChange={(e) => setPhoto(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label htmlFor=\"dayRate\" style={formStyles.label}>Day Rate:</label>\n                        <input type=\"text\" id=\"dayRate\" value={day_rate} onChange={(e) => setDayRate(e.target.value)} style={formStyles.input} />\n                    </div>\n                    <button type=\"submit\" style={formStyles.button}>Become a pet sitter!</button>\n                </form>\n                {errors.length > 0 && (\n                    <ul style={formStyles.errorList}>\n                        {errors.map((error) => (\n                            <li key={error}>{error}</li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { useState } from \"react\";\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    formGroup: {\n        marginBottom: '15px'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer'\n    },\n};\n\nexport default function UpdateClient({ updateClient, client, changeFormView }) {\n\n    console.log(client)\n\n    const [pet_information, setPetInformation] = useState(client.pet_information)\n    const [photo, setPetPhoto] = useState(client.photo)\n    const [full_name, setFullName] = useState(client.full_name)\n    const [ideal_petsitter, setIdealPetSitter] = useState(client.ideal_petsitter)\n\n    function patchProfile(e) {\n        e.preventDefault()\n        fetch(`/clients/${client.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                pet_information,\n                photo,\n                full_name,\n                ideal_petsitter\n            })\n        })\n            .then((resp) => resp.json())\n            .then((newClient) => {\n                changeFormView()\n                updateClient(newClient)\n                setFullName(newClient.full_name)\n                setIdealPetSitter(newClient.ideal_petsitter)\n                setPetInformation(newClient.pet_information)\n                setPetPhoto(newClient.photo)\n            })\n    }\n\n    return (\n        <div style={formStyles.formContainer}>\n            <form className=\"styled-form\" onSubmit={patchProfile}>\n                <h2>Client Form</h2>\n                <div style={formStyles.formGroup}>\n                    <label style={formStyles.label} htmlFor=\"full_name\">\n                        Full Name:\n                    </label>\n                    <input style={formStyles.input} type=\"text\" id=\"photo\" value={full_name} onChange={(e) => setFullName(e.target.value)} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label style={formStyles.label} htmlFor=\"pet_information\">\n                        Pet Information:\n                    </label>\n                    <textarea style={formStyles.input} type=\"text\" id=\"pet_information\" value={pet_information} onChange={(e) => setPetInformation(e.target.value)} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label style={formStyles.label} htmlFor=\"ideal_petsitter\">\n                        Your Ideal Pet-Sitter:\n                    </label>\n                    <textarea style={formStyles.input} type=\"text\" id=\"ideal_petsitter\" value={ideal_petsitter} onChange={(e) => setIdealPetSitter(e.target.value)} />\n                </div>\n                <div style={formStyles.formGroup}>\n                    <label style={formStyles.label} htmlFor=\"photo\">\n                        Pet Photo Url:\n                    </label>\n                    <input style={formStyles.input} type=\"text\" id=\"photo\" value={photo} onChange={(e) => setPetPhoto(e.target.value)} />\n                </div>\n                <button type=\"submit\">Update Account</button>\n            </form>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport UpdateClient from \"./UpdateClient\";\n\nconst styles = {\n    clientProfile: {\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        maxWidth: '400px',\n        margin: '0 auto',\n        textAlign: 'center',\n    },\n    imageWrapper: {\n        width: '150px',\n        height: '150px',\n        margin: '0 auto 20px',\n        borderRadius: '50%',\n        overflow: 'hidden',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        borderRadius: '50%',\n    },\n    heading: {\n        fontSize: '24px',\n        margin: '0',\n        color: '#333',\n    },\n    info: {\n        fontSize: '16px',\n        color: '#666',\n        margin: '10px 0',\n    },\n};\n\nexport default function ClientProfile({ client, updateClient }) {\n    const [updateButton, setUpdateButton] = useState(false)\n    const [updateButtonText, setUpdateButtonText] = useState(\"Update Account\")\n\n    function changeFormView(){\n        setUpdateButton(!updateButton)\n        if (updateButtonText === \"Update Account\") {\n            setUpdateButtonText(\"Close Update Form\")\n        } else {\n            setUpdateButtonText(\"Update Account\")\n        }\n    }\n\n    return (\n        <div id=\"clientProfile\" style={styles.clientProfile}>\n            <div style={styles.imageWrapper}>\n                <img src={client.photo} alt=\"the client\" style={styles.image} />\n            </div>\n            <h2 style={styles.heading}>Your client account:</h2>\n            <p style={styles.info}><b>My Name:</b> {client.full_name}, NYC</p>\n            <p style={styles.info}><b>About my pet:</b> {client.pet_information}</p>\n            <p style={styles.info}><b>Ideal petsitter:</b> {client.ideal_petsitter}</p>\n            <button onClick={() => changeFormView()}>{updateButtonText}</button>\n            {updateButton === true && (\n                <UpdateClient client={client} updateClient={updateClient} changeFormView={changeFormView} />\n            )}\n        </div>\n    );\n\n}","import React, { useEffect, useState } from \"react\";\nimport PetSitterCard from \"./PetSitterCard\";\n\nconst headerStyle = {\n    textAlign: 'center',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    color: '#9e9e9e',\n    width: '100%',\n    fontSize: '36px',\n    lineHeight: '1.2',\n};\n\nexport default function ClientPreviousSitters({ client, user, newRequestFromClientPage }) {\n\n    const [previousSitters, setPreviousSitters] = useState([])\n\n    useEffect(() => {\n        if (client.petsitters) {\n            let noRepeatSitters = [...new Map(client.petsitters.map((p) => [p.id, p])).values()]\n            setPreviousSitters(noRepeatSitters)\n        }\n    }, [client.petsitters])\n\n    return (\n        <div>\n            {previousSitters.length > 0 && (\n                <div>\n                    <h2 style={headerStyle}>Previous Pet Sitters:</h2>\n                    {previousSitters.map((sitter) => (\n                        <PetSitterCard newRequestFromClientPage={newRequestFromClientPage} key={sitter.id} petSitter={sitter} user={user} />\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport PendingAppointmentCard from \"./PendingAppointmentCard\";\nimport ActiveAppointmentCard from \"./ActiveAppointmentCard\";\nimport ClientPreviousSitters from \"./ClientPreviousSitters\";\nimport '../App.css';\n\nconst headerStyle = {\n    paddingTop: '20px',\n    textAlign: 'center',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    color: '#9e9e9e',\n    width: '100%',\n    fontSize: '36px',\n    lineHeight: '1.2',\n};\n\nexport default function ClientPendingAppointments({ updateClient, client, user }) {\n\n    const [appointments, setAppointments] = useState([])\n    const [pendingAppointments, setPendingAppointments] = useState([])\n    const [activeAppointments, setActiveAppointments] = useState([])\n\n    useEffect(() => {\n        fetch(\"/appointments\").then((response) => {\n            if (response.ok) {\n                response.json().then((apts) => {\n                    setAppointments(apts)\n\n                    let pendingApts = apts.filter((apt) => apt.client_id === user.client.id && apt.accepted !== true && apt.declined !== true && apt.canceled !== true)\n\n                    let activeApts = apts.filter((apt) => apt.client_id === user.client.id && apt.accepted === true && apt.completed !== true && apt.canceled !== true)\n\n                    setPendingAppointments(pendingApts)\n                    setActiveAppointments(activeApts)\n                });\n            }\n        });\n    }, [client, user]);\n\n    function updatePendingAppointments(updatedAppointment) {\n\n        if (updatedAppointment.accepted === true) {\n            let newPendingAppointments = pendingAppointments.filter((apt) => apt.id !== updatedAppointment.id)\n\n            setPendingAppointments(newPendingAppointments)\n            \n            let newActiveApts = [...activeAppointments, updatedAppointment]\n\n            setActiveAppointments(newActiveApts)\n        } else if (updatedAppointment.declined === true) {\n            let newPendingAppointments = pendingAppointments.filter((apt) => apt.id !== updatedAppointment.id)\n\n            setPendingAppointments(newPendingAppointments)\n        } else {\n            let newPendingAppointments = pendingAppointments.map((apt) => {\n                if (apt.id === updatedAppointment.id) {\n                    return { ...apt, ...updatedAppointment }\n                } else {\n                    return apt\n                }\n            })\n\n            setPendingAppointments(newPendingAppointments)\n        }\n\n        let newApts = appointments.map((apt) => {\n            if (apt.id === updatedAppointment.id) {\n                return { ...apt, ...updatedAppointment }\n            } else {\n                return apt\n            }\n        })\n        setAppointments(newApts)\n    }\n\n    function updateActiveAppointments(updatedAppointment) {\n\n        let newActiveAppointments = activeAppointments.filter((apt) => apt.id !== updatedAppointment.id)\n\n        setActiveAppointments(newActiveAppointments)\n\n        let newApts = appointments.map((apt) => {\n            if (apt.id === updatedAppointment.id) {\n                return { ...apt, ...updatedAppointment }\n            } else {\n                return apt\n            }\n        })\n\n        setAppointments(newApts)\n    }\n\n    function newRequestFromClientPage(newApt) {\n        let newPendingAppointments = [...pendingAppointments, newApt]\n        setPendingAppointments(newPendingAppointments)\n    }\n\n    function deleteAppointmentRequest(deletedRequestId, newClient) {\n        let newPendingRequests = pendingAppointments.filter((apt) => apt.id !== deletedRequestId)\n        setPendingAppointments(newPendingRequests)\n        updateClient(newClient)\n    }\n\n    if (pendingAppointments.length > 0 || activeAppointments.length > 0) {\n        return (\n            <div>\n                <h2 style={headerStyle}>Active Appointments / Requests:</h2>\n                {activeAppointments.map((appointment) => (\n                    <ActiveAppointmentCard user={user} client={client} updateActiveAppointments={updateActiveAppointments} appointment={appointment} key={appointment.id} />\n                ))}\n                {pendingAppointments.map((appointment) => (\n                    <PendingAppointmentCard deleteAppointmentRequest={deleteAppointmentRequest} user={user} client={client} updatePendingAppointments={updatePendingAppointments} appointment={appointment} key={appointment.id} />\n                ))}\n                <ClientPreviousSitters newRequestFromClientPage={newRequestFromClientPage} client={client} user={user} />\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h2 style={headerStyle}>No pending requests / active pet sits</h2>\n                <ClientPreviousSitters newRequestFromClientPage={newRequestFromClientPage} client={client} user={user} />\n            </div>\n        )\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport ClientProfile from \"./ClientProfile\";\nimport ClientPendingAppointments from \"./ClientPendingAppointments\";\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    },\n    formGroup: {\n        marginBottom: '15px',\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px',\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer',\n    },\n};\n\nexport default function ClientPage({ user, updateUser }) {\n\n    const [pet_information, setPetInformation] = useState(\"\")\n    const [photo, setPetPhoto] = useState(\"\")\n    const [full_name, setFullName] = useState(\"\")\n    const [ideal_petsitter, setIdealPetSitter] = useState(\"\")\n    const [client, setClient] = useState(null)\n\n    useEffect(() => {\n        fetch(\"/client\").then((response) => {\n            if (response.ok) {\n                response.json().then((client) => setClient(client));\n            }\n        });\n    }, []);\n\n    function updateClient(newClient) {\n        setClient(newClient)\n    }\n\n    function handleClientOptIn(e) {\n        e.preventDefault();\n        fetch(`/clients`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                pet_information,\n                full_name,\n                photo,\n                ideal_petsitter,\n                user_id: user.id,\n                currently_available: true\n            }),\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((client) => {\n                    setClient(client)\n                    updateUser(client)\n                });\n            }\n        })\n    }\n\n    if (client) {\n        return (\n            <div>\n                <ClientProfile updateClient={updateClient} client={client} />\n                <ClientPendingAppointments updateClient={updateClient} client={client} user={user} />\n            </div>\n        )\n    } else {\n        return (\n            <div style={formStyles.formContainer}>\n                <form className=\"styled-form\" onSubmit={handleClientOptIn}>\n                    <h2>Client Form</h2>\n                    <div style={formStyles.formGroup}>\n                        <label style={formStyles.label} htmlFor=\"full_name\">\n                            Full Name:\n                        </label>\n                        <input style={formStyles.input} type=\"text\" id=\"photo\" value={full_name} onChange={(e) => setFullName(e.target.value)} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label style={formStyles.label} htmlFor=\"pet_information\">\n                            Pet Information:\n                        </label>\n                        <textarea style={formStyles.input} type=\"text\" id=\"pet_information\" value={pet_information} onChange={(e) => setPetInformation(e.target.value)} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label style={formStyles.label} htmlFor=\"ideal_petsitter\">\n                            Your Ideal Pet-Sitter:\n                        </label>\n                        <textarea style={formStyles.input} type=\"text\" id=\"ideal_petsitter\" value={ideal_petsitter} onChange={(e) => setIdealPetSitter(e.target.value)} />\n                    </div>\n                    <div style={formStyles.formGroup}>\n                        <label style={formStyles.label} htmlFor=\"photo\">\n                            Pet Photo Url:\n                        </label>\n                        <input style={formStyles.input} type=\"text\" id=\"photo\" value={photo} onChange={(e) => setPetPhoto(e.target.value)} />\n                    </div>\n                    <button style={formStyles.button} type=\"submit\">\n                        Create client account\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nconst conversationCardStyles = {\n  conversationCard: {\n    display: \"flex\",\n    alignItems: \"center\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    padding: \"10px\",\n    marginBottom: \"20px\",\n  },\n  userContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    flex: \"1\",\n  },\n  userPhoto: {\n    width: \"60px\",\n    height: \"60px\",\n    borderRadius: \"50%\",\n  },\n  userName: {\n    marginTop: \"5px\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n  },\n  chatStartedText: {\n    fontSize: \"12px\",\n    textAlign: \"center\",\n    marginTop: \"5px\",\n    color: \"#999\",\n  },\n  openConversationButton: {\n    backgroundColor: \"blue\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\",\n    width: \"120px\",\n    marginTop: \"10px\",\n  },\n  conversationTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    marginBottom: \"10px\",\n  }\n};\n\nexport default function ConversationCard({ conversation, updateConvoButton }) {\n\n  const { petsitter, client, created_at } = conversation;\n\n  const date = new Date(created_at);\n  const year = date.getUTCFullYear();\n  const month = String(date.getUTCMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getUTCDate()).padStart(2, \"0\");\n\n  function displayMessagesAndForm() {\n    updateConvoButton(conversation.id)\n  }\n\n  return (\n    <div style={conversationCardStyles.conversationCard}>\n      <div style={conversationCardStyles.userContainer}>\n        <img src={client.photo} alt=\"Client\" style={conversationCardStyles.userPhoto} />\n        <p style={conversationCardStyles.userName}>{client.full_name}</p>\n      </div>\n      <div style={conversationCardStyles.userContainer}>\n        <p style={conversationCardStyles.conversationTitle}>{conversation.conversation_title}</p>\n        <p style={conversationCardStyles.chatStartedText}>Chat started on {year}-{month}-{day}</p>\n        <button onClick={displayMessagesAndForm} style={conversationCardStyles.openConversationButton}>Open Conversation</button>\n      </div>\n      <div style={conversationCardStyles.userContainer}>\n        <img src={petsitter.photo} alt=\"Petsitter\" style={conversationCardStyles.userPhoto} />\n        <p style={conversationCardStyles.userName}>{petsitter.full_name}</p>\n      </div>\n    </div>\n  );\n}\n\n\n\n\n","import React from \"react\";\n\nconst messageStyle = {\n    backgroundColor: '#f2f7ff',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    padding: '16px', // Increased padding for more space around the content\n    marginBottom: '5px',\n    borderRadius: '8px',\n    width: '90%',\n    maxWidth: '600px',\n    margin: '0 auto',\n    border: '2px solid #007bff',\n    fontFamily: 'Arial, sans-serif',\n    lineHeight: '1.6', // Slightly increased line height for better readability\n    display: 'flex',\n    flexDirection: 'column'\n};\n\nconst headingStyle = {\n    fontSize: '24px', // Increased font size for the heading\n    fontWeight: 'bold',\n    marginBottom: '8px',\n    marginTop: '2px'\n};\n\nconst metaInfoStyle = {\n    fontSize: '14px',\n    color: '#888',\n    marginBottom: '6px' // Increased margin at the bottom for separation\n};\n\nconst messageBodyStyle = {\n    fontSize: '18px', // Increased font size for the main message body\n    color: '#333',\n    marginBottom: '10px' // Slightly increased margin at the bottom\n};\n\n\nexport default function Message({ message }) {\n\n    function parseTimestamp(timestamp) {\n        const dateObj = new Date(timestamp);\n\n        const year = dateObj.getFullYear();\n        const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n        const day = String(dateObj.getDate()).padStart(2, '0');\n        const hours = String(dateObj.getHours()).padStart(2, '0');\n        const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n\n        const formattedDate = `${year}-${month}-${day}`;\n        const formattedTime = `${hours}:${minutes}`\n\n        return { date: formattedDate, time: formattedTime };\n    }\n\n    const { date, time } = parseTimestamp(message.created_at);\n\n    return (\n        <div style={messageStyle}>\n            <p style={headingStyle}>Message from: {message.user.username}</p>\n            <p style={metaInfoStyle}>{date}, {time}</p>\n            <p style={messageBodyStyle}>{message.body}</p>\n        </div>\n    )\n}","import React, { useState } from \"react\";\n\nconst formStyles = {\n    formContainer: {\n        marginTop: '20px',\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    },\n    formGroup: {\n        marginBottom: '15px',\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px',\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n    },\n    select: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        backgroundColor: '#fff',\n    },\n    button: {\n        width: '100%',\n        padding: '10px',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        color: '#fff',\n        backgroundColor: '#007bff',\n        borderRadius: '4px',\n        border: 'none',\n        cursor: 'pointer',\n    },\n    errorList: {\n        color: 'red',\n        marginTop: '10px',\n        textAlign: 'left',\n        paddingLeft: '20px',\n    },\n};\n\nexport default function NewMessageForm({ updateMessages, user, currentConvoId, updateConvoButton, scrollToBottom }) {\n\n    const [messageInformation, setMessageInformation] = useState(\"\")\n    const [errors, setErrorData] = useState([])\n\n    scrollToBottom()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        fetch(\"/messages\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: user.id,\n                conversation_id: currentConvoId,\n                body: messageInformation\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((data) => {\n                        setMessageInformation(\"\")\n                        updateMessages(data)\n                        scrollToBottom()\n                    });\n                } else {\n                    response.json().then((errorData) => {\n                        setErrorData(errorData.errors)\n                        console.log(errors)\n                    })\n                }\n            });\n    }\n\n    return (\n        <div style={formStyles.formContainer}>\n            <h2>New message:</h2>\n            <form className=\"custom-form\" onSubmit={handleSubmit}>\n                <div style={formStyles.formGroup}>\n                    <label htmlFor=\"appointment_information\" style={formStyles.label}>\n                        Message Content:\n                    </label>\n                    <textarea type=\"text\" className=\"custom-input\" value={messageInformation} onChange={(e) => setMessageInformation(e.target.value)} style={formStyles.input} />\n                </div>\n                <button>Send Message</button>\n            </form>\n            <br></br>\n            <button onClick={updateConvoButton}>Exit Conversation</button>\n        </div>\n    );\n}","import React from \"react\";\nimport Message from \"./Message\";\nimport NewMessageForm from \"./NewMessageForm\";\n\nexport default function Messages({ currentConvoId, user, updateMessages, messages, scrollToBottom, updateConvoButton }) {\n\n    if (messages.length > 0) {\n        return (\n            <div>\n                {messages.map((message) => (\n                    <Message key={message.id} message={message} />\n                ))}\n                <NewMessageForm updateConvoButton={updateConvoButton} scrollToBottom={scrollToBottom} currentConvoId={currentConvoId} updateMessages={updateMessages} user={user} />\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h4 style={{textAlign: \"center\"}}>There are currently no messages in this conversation, send one to start it out!</h4>\n                <NewMessageForm updateConvoButton={updateConvoButton} scrollToBottom={scrollToBottom} currentConvoId={currentConvoId} updateMessages={updateMessages} user={user} />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport '../App.css';\n\nconst styles = {\n    petSitterCard: {\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        maxWidth: '300px',\n        margin: '10px auto',\n        textAlign: 'center'\n    },\n    imageWrapper: {\n        width: '100px',\n        height: '100px',\n        margin: '0 auto 10px',\n        borderRadius: '50%',\n        overflow: 'hidden',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    heading: {\n        fontSize: '20px',\n        margin: '0',\n        color: '#333'\n    },\n    subheading: {\n        fontSize: '16px',\n        margin: '5px 0',\n        color: '#666'\n    },\n    info: {\n        fontSize: '14px',\n        color: '#666',\n        margin: '5px 0'\n    },\n    button: {\n        fontSize: '14px',\n        padding: '8px 16px',\n        backgroundColor: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        marginTop: '10px',\n    },\n};\n\nexport default function ConversationPetSitterCard({ petSitter }) {\n\n    return (\n        <div className=\"petSitterCardDiv\" style={styles.petSitterCard}>\n            <div style={styles.imageWrapper}>\n                <img src={petSitter.photo} alt=\"the petsitter\" style={styles.image} />\n            </div>\n            <h3 style={styles.heading}>{petSitter.full_name}</h3>\n            <h4 style={styles.subheading}>About me:</h4>\n            <p style={styles.info}>I am based in {petSitter.city}, NYC</p>\n            <p style={styles.info}>{petSitter.bio}</p>\n            <h4 style={styles.subheading}>My ideal pet sit:</h4>\n            <p style={styles.info}>{petSitter.my_ideal_pet_sit}</p>\n            <h4 style={styles.subheading}>What do I charge?</h4>\n            <p style={styles.info}>My rate is currently ${petSitter.day_rate}</p>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nconst styles = {\n    clientProfile: {\n        backgroundColor: '#f8f8f8',\n        padding: '20px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        maxWidth: '300px',\n        margin: '10px auto',\n        textAlign: 'center'\n    },\n    imageWrapper: {\n        width: '100px',\n        height: '100px',\n        margin: '0 auto 10px',\n        borderRadius: '50%',\n        overflow: 'hidden',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    heading: {\n        fontSize: '20px',\n        margin: '0',\n        color: '#333'\n    },\n    info: {\n        fontSize: '14px',\n        color: '#666',\n        margin: '5px 0'\n    },\n    label: {\n        display: 'block',\n        fontSize: '16px',\n        color: '#333',\n        marginBottom: '5px'\n    },\n    input: {\n        width: '100%',\n        padding: '8px',\n        fontSize: '16px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n    },\n};\n\nexport default function ConversationClientCard({ conversation, removeConversation, client, scrollToBottom, updateConversations }) {\n\n    const [convoTitle, setConvoTitle] = useState(conversation.conversation_title)\n\n    function handleConvoDelete() {\n        if (window.confirm(\"Are you sure? Messages from this conversation will not be able to be viewed by either user.\") === true) {\n            fetch(`/conversations/${conversation.id}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n                .then((resp) => resp.json())\n                .then((data) => removeConversation(data))\n        }\n    }\n\n    function updateConvoTitle(e) {\n        e.preventDefault()\n        fetch(`/conversations/${conversation.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                conversation_title: convoTitle\n            })\n        })\n        .then((resp) => resp.json())\n        .then((data) => updateConversations(data))\n    }\n\n    return (\n        <div id=\"clientProfile\" style={styles.clientProfile}>\n            <div style={styles.imageWrapper}>\n                <img src={client.photo} alt=\"the client\" style={styles.image} />\n            </div>\n            <h3 style={styles.heading}>{client.full_name}</h3>\n            <p style={styles.info}><b>About my pet:</b> {client.pet_information}</p>\n            <p style={styles.info}><b>Ideal petsitter:</b> {client.ideal_petsitter}</p>\n            <button className=\"declineButton\" onClick={handleConvoDelete}>Delete conversation.</button>\n            <br></br><br></br>\n            <button className=\"acceptButton\" onClick={scrollToBottom}>Go to end of chat.</button>\n            <br></br><br></br>\n            <form onSubmit={updateConvoTitle}>\n                <button className=\"acceptButton\">Update conversation title</button>\n                <br></br><br></br>\n                <label style={styles.label} htmlFor=\"convoTitle\">New Conversation Title:</label>\n                <input style={styles.input} className=\"convoTitle\" type=\"text\" value={convoTitle} onChange={(e) => setConvoTitle(e.target.value)} />\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport ConversationCard from \"./ConversationCard\";\nimport Messages from \"./Messages\";\nimport ConversationPetSitterCard from \"./ConversationPetSitterCard\";\nimport ConversationClientCard from \"./ConversationClientCard\";\n\nconst headerStyle = {\n    textAlign: 'center',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    color: '#9e9e9e',\n    width: '100%',\n    fontSize: '36px',\n    lineHeight: '1.2',\n};\n\nexport default function Conversations({ user }) {\n\n    const [conversations, setConversations] = useState([])\n    const [openConvoButton, setOpenConvoButton] = useState(false)\n    const [currentConvoId, setCurrentConvoId] = useState(null)\n    const [messages, setMessages] = useState([])\n    const [errors, setErrors] = useState([])\n\n    const bottomElement = useRef(null);\n\n    function scrollToBottom() {\n        bottomElement?.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    function updateConvoButton(newId) {\n        if (openConvoButton === false) {\n            setOpenConvoButton(true)\n            setCurrentConvoId(newId)\n            scrollToBottom()\n        } else {\n            setOpenConvoButton(false)\n            setCurrentConvoId(null)\n            scrollToBottom()\n        }\n    }\n\n    function removeConversation(oldConvo) {\n        let newConversations = conversations.filter((convo) => convo.id !== oldConvo.id)\n        setConversations(newConversations)\n        setCurrentConvoId(null)\n        setOpenConvoButton(false)\n    }\n\n    function updateConversations(updatedConvo) {\n        let filteredConversations = conversations.filter((convo) => convo.id !== updatedConvo.id)\n        let newConversations = [...filteredConversations, updatedConvo]\n        setConversations(newConversations)\n\n        let newMessageBody = `Automated message: ${user.username} just changed the conversation title to \"${updatedConvo.conversation_title}\"`\n\n        fetch(\"/messages\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: user.id,\n                conversation_id: currentConvoId,\n                body: newMessageBody\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((newMessage) => {\n                        updateMessages(newMessage)\n                        scrollToBottom()\n                    });\n                } else {\n                    response.json().then((errorData) => {\n                        setErrors(errorData.errors)\n                        console.log(errors)\n                    })\n                }\n            });\n    }\n\n    useEffect(() => {\n        fetch(\"/conversations\")\n            .then((resp) => {\n                if (resp.ok) {\n                    resp.json().then((convos) => {\n                        setConversations(convos)\n                        console.log(convos)\n                        if (user.client && user.petsitter) {\n                            let filteredConvos = convos.filter((convo) => convo.petsitter_id === user.petsitter.id || convo.client_id === user.client.id)\n                            setConversations(filteredConvos)\n                        } else if (user.client) {\n                            let filteredConvos = convos.filter((convo) => convo.client_id === user.client.id)\n                            setConversations(filteredConvos)\n                        } else {\n                            let filteredConvos = convos.filter((convo) => convo.petsitter_id === user.petsitter.id)\n                            setConversations(filteredConvos)\n                        }\n                        scrollToBottom()\n                    })\n                } else {\n                    resp.json().then((errors) => {\n                        console.log(errors)\n                    })\n                }\n            })\n    }, [user])\n\n    useEffect(() => [\n        fetch(\"/messages\")\n            .then((resp) => resp.json())\n            .then((messages) => {\n                let convoMessages = messages.filter((message) => message.conversation_id === currentConvoId)\n                setMessages(convoMessages)\n            })\n    ], [currentConvoId])\n\n    function updateMessages(newMessage) {\n        const newMessages = [...messages, newMessage]\n        setMessages(newMessages)\n    }\n\n    if (conversations.length > 0) {\n        return (\n            <div>\n                <div>\n                    {conversations.map((conversation) => (\n                        <div key={conversation.id}>\n                            {openConvoButton === false &&\n                                <div>\n                                    <h3 style={{ textAlign: \"center\" }}>Open conversations:</h3>\n                                    <ConversationCard updateConvoButton={updateConvoButton} conversation={conversation} user={user} key={conversation.id} />\n                                </div>\n                            }\n                            {currentConvoId === conversation.id && (\n                                <div>\n                                    <h3 style={{ textAlign: \"center\" }}>Conversation \"{conversation.conversation_title}\" between:</h3>\n                                    <ConversationPetSitterCard scrollToBottom={scrollToBottom} petSitter={conversation.petsitter} />\n                                    <ConversationClientCard updateConversations={updateConversations} conversation={conversation} removeConversation={removeConversation} scrollToBottom={scrollToBottom} client={conversation.client} />\n                                    <h3 style={{ textAlign: \"center\" }}>Messages:</h3>\n                                    <Messages updateMessages={updateMessages} messages={messages} scrollToBottom={scrollToBottom} updateConvoButton={updateConvoButton} currentConvoId={currentConvoId} user={user} />\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n                <div ref={bottomElement}>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div style={headerStyle}>No conversations yet - if you're a client, feel free to start one! Petsitters, clients will reach out when they need help.</div>\n        )\n    }\n}","import { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport PageNavLinks from './components/PageNavLinks';\nimport Home from './components/Home';\nimport PetSittersPage from './components/PetSittersPage';\nimport PetSitterPage from './components/PetSitterPage';\nimport ClientPage from './components/ClientPage';\nimport Conversations from './components/Conversations';\n\nconst headerStyle = {\n  textAlign: 'center',\n  fontFamily: 'Arial, Helvetica, sans-serif',\n  color: '#9e9e9e',\n  width: '100%',\n  fontSize: '36px',\n  lineHeight: '1.2',\n};\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\").then((response) => {\n      if (response.ok) {\n        response.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  function handleLogout() {\n    fetch(\"/logout\", {\n      method: \"DELETE\",\n    }).then(setUser(null))\n  }\n\n  function updateUserClient(clientAccount) {\n    const newUser = user\n    newUser.client = clientAccount\n    setUser(newUser)\n  }\n\n  function updateUserPetsitter(petsitterAccount) {\n    const newUser = user\n    newUser.petsitter = petsitterAccount\n    setUser(newUser)\n  }\n\n  if (user) {\n    return (\n      <div style={{paddingBottom: \"20px\"}}>\n        <PageNavLinks />\n        <h1 style={headerStyle}>NYCPetSitters</h1>\n        <Routes>\n          <Route path=\"/\" element={<Home user={user} setUser={setUser} />} />\n          <Route path=\"/petsitter\" element={<PetSitterPage updateUser={updateUserPetsitter} user={user} setUser={setUser} handleLogout={handleLogout} />} />\n          <Route path=\"/client\" element={<ClientPage updateUser={updateUserClient} user={user} setUser={setUser} handleLogout={handleLogout} />} />\n          <Route path=\"/petsitters\" element={<PetSittersPage user={user} handleLogout={handleLogout} />} />\n          <Route path=\"/conversations\" element={<Conversations user={user} handleLogout={handleLogout} />} />\n        </Routes>\n        <div style={{ marginTop: '20px' }}> {/* Add some space above the button */}\n          <button style={{ position: 'fixed', bottom: '0', right: '0px', marginTop: \"2%\" }} onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div id=\"notLoggedInHome\">\n        <h1 style={headerStyle}>NYC Pet Sitters</h1>\n        <Login onLogin={setUser} />\n        <Signup onLogin={setUser} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}